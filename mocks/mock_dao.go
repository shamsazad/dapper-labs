// Code generated by MockGen. DO NOT EDIT.
// Source: dapper-labs/dao (interfaces: DaoInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	models "dapper-labs/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDaoInterface is a mock of DaoInterface interface.
type MockDaoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDaoInterfaceMockRecorder
}

// MockDaoInterfaceMockRecorder is the mock recorder for MockDaoInterface.
type MockDaoInterfaceMockRecorder struct {
	mock *MockDaoInterface
}

// NewMockDaoInterface creates a new mock instance.
func NewMockDaoInterface(ctrl *gomock.Controller) *MockDaoInterface {
	mock := &MockDaoInterface{ctrl: ctrl}
	mock.recorder = &MockDaoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDaoInterface) EXPECT() *MockDaoInterfaceMockRecorder {
	return m.recorder
}

// CreateHashedUserCredential mocks base method.
func (m *MockDaoInterface) CreateHashedUserCredential(arg0 models.LoginCredential) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateHashedUserCredential", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateHashedUserCredential indicates an expected call of CreateHashedUserCredential.
func (mr *MockDaoInterfaceMockRecorder) CreateHashedUserCredential(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateHashedUserCredential", reflect.TypeOf((*MockDaoInterface)(nil).CreateHashedUserCredential), arg0)
}

// CreateUser mocks base method.
func (m *MockDaoInterface) CreateUser(arg0 models.ApiCreateUser) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockDaoInterfaceMockRecorder) CreateUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockDaoInterface)(nil).CreateUser), arg0)
}

// FindHashedUserCredentials mocks base method.
func (m *MockDaoInterface) FindHashedUserCredentials(arg0 string) (models.UserCredential, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindHashedUserCredentials", arg0)
	ret0, _ := ret[0].(models.UserCredential)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindHashedUserCredentials indicates an expected call of FindHashedUserCredentials.
func (mr *MockDaoInterfaceMockRecorder) FindHashedUserCredentials(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindHashedUserCredentials", reflect.TypeOf((*MockDaoInterface)(nil).FindHashedUserCredentials), arg0)
}

// GetAllUsers mocks base method.
func (m *MockDaoInterface) GetAllUsers() (models.ApiUsers, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllUsers")
	ret0, _ := ret[0].(models.ApiUsers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllUsers indicates an expected call of GetAllUsers.
func (mr *MockDaoInterfaceMockRecorder) GetAllUsers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllUsers", reflect.TypeOf((*MockDaoInterface)(nil).GetAllUsers))
}

// UpdateUser mocks base method.
func (m *MockDaoInterface) UpdateUser(arg0 models.ApiUpdateUser, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateUser", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateUser indicates an expected call of UpdateUser.
func (mr *MockDaoInterfaceMockRecorder) UpdateUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateUser", reflect.TypeOf((*MockDaoInterface)(nil).UpdateUser), arg0, arg1)
}
